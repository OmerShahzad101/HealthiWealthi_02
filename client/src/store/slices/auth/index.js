import { createSlice } from "@reduxjs/toolkit";

let usr = localStorage.getItem("user");
usr = usr ? JSON.parse(usr) : null;
let accessToken = localStorage.getItem("accessToken");

const initialState = {
  user: {
    accessToken: accessToken,
    permissions: [],
    userRoleId: null,
    Userabout: null,
    fileName: null,
    specialization: null,
    city: usr ? usr.res?.city : null,
    country: usr ? usr.res?.country : null,
    userid: usr ? usr.res?._id : null,
    userRole: usr ? usr.res?.type : null,
    UserEmail: usr ? usr.res?.email : null,
    lastName: usr ? usr.res?.lastname : null,
    username: usr ? usr.res?.username : null,
    firstName: usr ? usr.res?.firstname : null,
    googleRefreshToken: usr ? usr.response?.googleRefreshToken : null,

  },
  clientProfile: {
    firstName: null,
    lastName: null,
    gender: null,
    bloodGroup: null,
    phoneNumber: null,
    about: null,
    city: null,
    state: null,
    country: null,
    postalCode: null,
  },
  coachProfile: {
    firstName: null,
    lastName: null,
    gender: null,
    bloodGroup: null,
    phoneNumber: null,
    about: null,
    city: null,
    state: null,
    country: null,
    postalCode: null,
    specialization: null,
  },
};

export const authSlice = createSlice({
  name: "auth",
  initialState,
  reducers: {
    setUser(state, { payload }) {
      console.log("payload", payload);
      const { res, response } = payload;

      if (res) {
        state = {
          ...state,
          user: {
            ...state.user,
            Userabout: res.about,
            firstName: res.firstname,
            lastName: res.lastname,
            specialization: res?.specialization,
            fileName: res?.fileName,
            city: res?.city,
            country: res?.country,
          },
          clientProfile: { ...state.clientProfile },
          coachProfile: { ...state.coachProfile },
        };
      }
      if (response) {
        state = {
          ...state,
          user: {
            ...state.user,
            userRole: response.type,
            username: response.name,
            userid: response?._id,
            UserEmail: response.email,
          },
          clientProfile: { ...state.clientProfile },
          coachProfile: { ...state.coachProfile },
        };
      }
      return state;
    },
    setClientProfile(state, { payload }) {
      const { res } = payload;
      state = {
        ...state,
        user: {
          ...state.user,
        },
        clientProfile: {
          ...state.clientProfile,
          firstName: res.firstname,
          lastName: res.lastname,
          gender: res.gender,
          bloodGroup: res.bloodgroup,
          phoneNumber: res.phone,
          about: res.about,
          city: res.city,
          state: res.state,
          country: res.country,
          postalCode: res.postalCode,
        },
        coachProfile: { ...state.coachProfile },
      };
      return state;
    },
    setCoachProfile(state, { payload }) {
      console.log("coachProfile", payload);
      const { res } = payload;
      state = {
        ...state,
        user: {
          ...state.user,
        },
        clientProfile: { ...state.clientProfile },
        coachProfile: {
          ...state.coachProfile,
          firstName: res.firstname,
          lastName: res.lastname,
          specialization: res.specialization,
          city: res.city,
          state: res.state,
          country: res.country,
        },
      };
      return state;
    },
    setUserPermissions(state, { payload: permissions }) {
      state.permissions = permissions;
    },
    setAccessToken(state, { payload: accessToken }) {
      state.user.accessToken = accessToken;
    },
    setImage(state, { payload: fileName }) {
      state.user.fileName = fileName;
    },
  },
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  extraReducers: {},
});

export const {
  setUser,
  setUserPermissions,
  setAccessToken,
  setDashboardName,
  setClientProfile,
  setCoachProfile,
  setImage,
} = authSlice.actions;
export default authSlice.reducer;
